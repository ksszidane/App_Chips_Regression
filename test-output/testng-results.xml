<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="6" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-15T16:35:48 KST" name="ExtentReport" finished-at="2021-05-15T16:38:57 KST" duration-ms="189136">
    <groups>
    </groups>
    <test started-at="2021-05-15T16:35:48 KST" name="Test_Project" finished-at="2021-05-15T16:38:57 KST" duration-ms="189136">
      <class name="Chips_001_기본기능.기본기능_01_서비스호출">
        <test-method is-config="true" signature="setupClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:35:48 KST" name="setupClass" finished-at="2021-05-15T16:36:02 KST" duration-ms="14251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chips]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://0.0.0.0:4723/wd/hub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PRD]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chips]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[out]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[1c25b5ace00c7ece]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[ALDF3NYA6C0D0C654DD2]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[ALDF5TR5SNGZ8175DA16]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[ALDFHFMQC3RB935B4B02]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:02 KST" name="BeforeMethod" finished-at="2021-05-15T16:36:02 KST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0000_앱실행과AccessToken얻기(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0000_앱실행과AccessToken얻기(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:02 KST" name="TC_0000_앱실행과AccessToken얻기" description="칩스 리그레이션 TC : 실행_0000" finished-at="2021-05-15T16:36:42 KST" duration-ms="39645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0000_앱실행과AccessToken얻기(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0000_앱실행과AccessToken얻기 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:42 KST" name="AfterMethod" finished-at="2021-05-15T16:36:42 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0000_앱실행과AccessToken얻기 status=SUCCESS method=기본기능_01_서비스호출.TC_0000_앱실행과AccessToken얻기(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="TC_0009_MIC버튼호출(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:42 KST" name="TC_0009_MIC버튼호출" description="칩스 리그레이션 TC : 실행_0009" finished-at="2021-05-15T16:36:45 KST" duration-ms="3094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0009_MIC버튼호출(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0009_MIC버튼호출 -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:42 KST" name="BeforeMethod" finished-at="2021-05-15T16:36:42 KST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0009_MIC버튼호출(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:45 KST" name="AfterMethod" finished-at="2021-05-15T16:36:45 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0009_MIC버튼호출 status=SUCCESS method=기본기능_01_서비스호출.TC_0009_MIC버튼호출(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:45 KST" name="BeforeMethod" finished-at="2021-05-15T16:36:45 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0068_베터리잔량_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0068_베터리잔량_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:36:45 KST" name="TC_0068_베터리잔량_발화체크" description="칩스 리그레이션 TC : 실행_0068" finished-at="2021-05-15T16:37:02 KST" duration-ms="17354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0068_베터리잔량_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0068_베터리잔량_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:02 KST" name="AfterMethod" finished-at="2021-05-15T16:37:02 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0068_베터리잔량_발화체크 status=SUCCESS method=기본기능_01_서비스호출.TC_0068_베터리잔량_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:02 KST" name="BeforeMethod" finished-at="2021-05-15T16:37:02 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0069_베터리잔량_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0069_베터리잔량_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:02 KST" name="TC_0069_베터리잔량_발화체크" description="칩스 리그레이션 TC : 실행_0069" finished-at="2021-05-15T16:37:20 KST" duration-ms="17276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0069_베터리잔량_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0069_베터리잔량_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:20 KST" name="AfterMethod" finished-at="2021-05-15T16:37:20 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0069_베터리잔량_발화체크 status=SUCCESS method=기본기능_01_서비스호출.TC_0069_베터리잔량_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:20 KST" name="BeforeMethod" finished-at="2021-05-15T16:37:20 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0079_전원제어_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0079_전원제어_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:20 KST" name="TC_0079_전원제어_발화체크" description="칩스 리그레이션 TC : 실행_0079" finished-at="2021-05-15T16:37:34 KST" duration-ms="14236" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0079_전원제어_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at Chips_001_기본기능.기본기능_01_서비스호출.TC_0079_전원제어_발화체크(기본기능_01_서비스호출.java:136)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0079_전원제어_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:34 KST" name="AfterMethod" finished-at="2021-05-15T16:37:34 KST" duration-ms="593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0079_전원제어_발화체크 status=FAILURE method=기본기능_01_서비스호출.TC_0079_전원제어_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:34 KST" name="BeforeMethod" finished-at="2021-05-15T16:37:34 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0091_환경설정_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0091_환경설정_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:34 KST" name="TC_0091_환경설정_발화체크" description="칩스 리그레이션 TC : 실행_0091" finished-at="2021-05-15T16:37:49 KST" duration-ms="14212" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0091_환경설정_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at Chips_001_기본기능.기본기능_01_서비스호출.TC_0091_환경설정_발화체크(기본기능_01_서비스호출.java:152)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0091_환경설정_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:49 KST" name="AfterMethod" finished-at="2021-05-15T16:37:49 KST" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0091_환경설정_발화체크 status=FAILURE method=기본기능_01_서비스호출.TC_0091_환경설정_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:49 KST" name="BeforeMethod" finished-at="2021-05-15T16:37:49 KST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0094_미디어재생중_환경설정_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0094_미디어재생중_환경설정_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:37:49 KST" name="TC_0094_미디어재생중_환경설정_발화체크" description="칩스 리그레이션 TC : 실행_0094" finished-at="2021-05-15T16:38:17 KST" duration-ms="27896" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0094_미디어재생중_환경설정_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at Chips_001_기본기능.기본기능_01_서비스호출.TC_0094_미디어재생중_환경설정_발화체크(기본기능_01_서비스호출.java:174)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0094_미디어재생중_환경설정_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:17 KST" name="AfterMethod" finished-at="2021-05-15T16:38:17 KST" duration-ms="527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0094_미디어재생중_환경설정_발화체크 status=FAILURE method=기본기능_01_서비스호출.TC_0094_미디어재생중_환경설정_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:17 KST" name="BeforeMethod" finished-at="2021-05-15T16:38:17 KST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0098_홈화면변경_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0098_홈화면변경_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:17 KST" name="TC_0098_홈화면변경_발화체크" description="칩스 리그레이션 TC : 실행_0098" finished-at="2021-05-15T16:38:35 KST" duration-ms="17222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0098_홈화면변경_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0098_홈화면변경_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:35 KST" name="AfterMethod" finished-at="2021-05-15T16:38:35 KST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0098_홈화면변경_발화체크 status=SUCCESS method=기본기능_01_서비스호출.TC_0098_홈화면변경_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:35 KST" name="BeforeMethod" finished-at="2021-05-15T16:38:35 KST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0115_나이트모드_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="TC_0115_나이트모드_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:35 KST" name="TC_0115_나이트모드_발화체크" description="칩스 리그레이션 TC : 실행_0115" finished-at="2021-05-15T16:38:52 KST" duration-ms="17288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Chips_001_기본기능.기본기능_01_서비스호출.TC_0115_나이트모드_발화체크(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_0115_나이트모드_발화체크 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:52 KST" name="AfterMethod" finished-at="2021-05-15T16:38:52 KST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_0115_나이트모드_발화체크 status=SUCCESS method=기본기능_01_서비스호출.TC_0115_나이트모드_발화체크(java.lang.reflect.Method)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDownClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Chips_001_기본기능.기본기능_01_서비스호출@565f390]" started-at="2021-05-15T16:38:52 KST" name="tearDownClass" finished-at="2021-05-15T16:38:57 KST" duration-ms="4962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PRD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chips]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[out]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1c25b5ace00c7ece]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ALDF3NYA6C0D0C654DD2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALDF5TR5SNGZ8175DA16]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ALDFHFMQC3RB935B4B02]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Chips_001_기본기능.기본기능_01_서비스호출 -->
    </test> <!-- Test_Project -->
  </suite> <!-- ExtentReport -->
</testng-results>
